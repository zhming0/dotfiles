// vim: ft=jsonc
// Check https://github.com/neoclide/coc.nvim/blob/master/doc/coc-config.txt
// And https://github.com/neoclide/coc.nvim/blob/master/doc/coc.txt
{
  "[java]": {
    "semanticTokens.enable": true,
  },
  "codeLens.enable": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.preferences.importModuleSpecifier": "relative",
  "coc.preferences.enableMessageDialog": true,
  "languageserver": {
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"],
      "initializationOptions": {
        "usePlaceholders": true
      }
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "clojure-lsp": {
      "command": "clojure-lsp",
      "args": [],
      "filetypes": ["clojure"],
      "rootPatterns": ["project.clj", "deps.edn"],
      "additionalSchemes": ["jar", "zipfile"],
      "trace.server": "verbose",
      "initializationOptions": {
      }
    },
    "terraform": {
      "command": "terraform-ls",
      "args": ["serve"],
      "filetypes": ["terraform", "tf"],
      "initializationOptions": {},
      "settings": {}
    }
  },

  "yaml.validate": false,
  "yaml.schemas": {
    "kubernetes": "/*.yaml"
  },

  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck"
  }
}
