# set -g prefix C-a
unbind C-b
set -g prefix `
bind-key ` send-prefix

# Temporarily disabled in favor of vim-tmux integration
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Try to make split clearer and highlight focuses window/pane
set-option -g pane-active-border-style fg=blue,bg=white
set-option -g pane-border-style fg='colour236'
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

set -g status-justify centre
set -g status-style bg=colour240,fg=white
setw -g window-status-style fg=magenta,bg=colour240
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour244]#W#[fg=colour244]#F '
setw -g window-status-current-style fg=colour255,bg=colour245
setw -g window-status-current-format ' #[fg=cyan]#I:#[fg=colour255]#W#[fg=cyan]#F '


set -g default-terminal "screen-256color"

set -g default-shell /usr/local/bin/fish

set -g base-index 1
setw -g pane-base-index 1

set-option -g status-position top
set-option -g escape-time 10

setw -g mode-keys vi

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

